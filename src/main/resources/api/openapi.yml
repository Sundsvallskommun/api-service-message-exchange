openapi: 3.0.1
info:
  title: chat
  contact: { }
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "1.0"
servers:
  - url: http://localhost:61031
    description: Generated server url
tags:
  - name: Message resource
    description: Message operations
  - name: Conversation resource
    description: Conversation operations
paths:
  /{municipalityId}/{namespace}/conversations:
    post:
      tags:
        - Conversation resource
      description: Create a conversation
      operationId: createConversation
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: conversation
          in: query
          description: Conversation to be created
          required: true
          schema:
            $ref: "#/components/schemas/ConversationRequest"
      responses:
        "201":
          description: Created - Successful operation
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/conversations/{conversationId}/messages:
    get:
      tags:
        - Message resource
      description: "Get messages (lazy load, pageable, sortable)"
      operationId: getMessages
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageMessage"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      tags:
        - Message resource
      description: Post a message with attachment
      operationId: postMessage
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - message
              type: object
              properties:
                message:
                  $ref: "#/components/schemas/MessageRequest"
                attachments:
                  type: array
                  description: List of attachments
                  items:
                    type: string
                    format: binary
      responses:
        "201":
          description: Created - Successful operation
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/conversations/{conversationId}:
    get:
      tags:
        - Conversation resource
      description: Get a conversation
      operationId: getCommunication
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "200":
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversation"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
        - Conversation resource
      description: Delete a conversation
      operationId: deleteConversation
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "204":
          description: No Content - Successful operation
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    patch:
      tags:
        - Conversation resource
      description: Update a conversation
      operationId: updateConversation
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: conversation
          in: query
          description: Conversation to be updated
          required: true
          schema:
            $ref: "#/components/schemas/ConversationRequest"
      responses:
        "200":
          description: OK - Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversation"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/{namespace}/conversations/{conversationId}/messages/{messageId}/attachments/{attachmentId}:
    get:
      tags:
        - Message resource
      summary: Read attachment
      description: Fetches the attachment that matches the provided message id and
        attachment id
      operationId: readErrandAttachment
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: messageId
          in: path
          description: Message ID
          required: true
          schema:
            type: string
          example: d82bd8ac-1507-4d9a-958d-369261eecc15
        - name: attachmentId
          in: path
          description: Errand attachment id
          required: true
          schema:
            type: string
          example: 5f79a808-0ef3-4985-99b9-b12f23e202a7
      responses:
        "200":
          description: Successful Operation
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api-docs:
    get:
      tags:
        - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
  /{municipalityId}/{namespace}/conversations/{conversationId}/messages/{messageId}:
    delete:
      tags:
        - Message resource
      description: Delete a message
      operationId: deleteMessage
      parameters:
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            pattern: "[\\w|\\-]+"
            type: string
          example: MY_NAMESPACE
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        - name: messageId
          in: path
          description: Message ID
          required: true
          schema:
            type: string
          example: d82bd8ac-1507-4d9a-958d-369261eecc15
      responses:
        "204":
          description: No Content - Successful operation
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  schemas:
    ConversationRequest:
      type: object
      properties:
        participants:
          type: array
          description: The list of participants in the conversation.
          items:
            $ref: "#/components/schemas/Participant"
        channelId:
          type: string
          description: "A list of channel, reference, and context identifiers associated\
            \ with the conversation."
          example: "[\"channel1-ref1-context1\",\"channel2-ref2-context2\"]"
        metaData:
          type: array
          description: A list of metadata associated with the conversation.
          items:
            $ref: "#/components/schemas/MetaData"
        topic:
          type: string
          description: The topic of the conversation.
          example: Customer Support
      description: "Represents a conversation containing participants, messages, and\
        \ metadata."
    MetaData:
      type: object
      properties:
        key:
          type: string
        values:
          type: array
          items:
            type: string
      description: A list of metadata associated with the conversation.
    Participant:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      description: The list of participants in the conversation.
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        type:
          type: string
          format: uri
        status:
          $ref: "#/components/schemas/StatusType"
        violations:
          type: array
          items:
            $ref: "#/components/schemas/Violation"
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    MessageRequest:
      type: object
      properties:
        sequenceNumber:
          type: string
          description: The sequence number of the message in the conversation.
          example: "1"
        inReplyTo:
          type: string
          description: "The identifier of the message this message is replying to,\
            \ if any."
          example: msg-12344
        createdBy:
          $ref: "#/components/schemas/Participant"
        content:
          type: string
          description: The content of the message.
          example: "Hello, how can I help you?"
        readBy:
          type: array
          description: The list of participants who have read the message.
          items:
            $ref: "#/components/schemas/Participant"
      description: Message to be posted
    Attachment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the attachment
          readOnly: true
          example: cb20c51f-fcf3-42c0-b613-de563634a8ec
        fileName:
          type: string
          description: Name of the file
          example: my-file.txt
        mimeType:
          type: string
          description: Mime type of the file
          readOnly: true
        created:
          type: string
          description: The attachment created date
          format: date-time
          example: 2023-01-01T00:00:00Z
      description: The list of attachments associated with the message.
    Conversation:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the conversation.
          example: "1234567890"
        participants:
          type: array
          description: The list of participants in the conversation.
          items:
            $ref: "#/components/schemas/Participant"
        municipalityId:
          type: string
          description: The identifier of the municipality associated with the conversation.
          example: municipality-123
        namespace:
          type: string
          description: The namespace of the conversation.
          example: namespace-abc
        channelId:
          type: string
          description: "A list of channel, reference, and context identifiers associated\
            \ with the conversation."
          example: "[\"channel1-ref1-context1\",\"channel2-ref2-context2\"]"
        metaData:
          type: array
          description: A list of metadata associated with the conversation.
          items:
            $ref: "#/components/schemas/MetaData"
        topic:
          type: string
          description: The topic of the conversation.
          example: Customer Support
        messages:
          type: array
          description: The list of messages in the conversation.
          items:
            $ref: "#/components/schemas/Message"
      description: "Represents a conversation containing participants, messages, and\
        \ metadata."
    Message:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the message.
          example: 7f77f9fd-d01d-4742-974a-714b911e3496
        sequenceNumber:
          type: string
          description: The sequence number of the message in the conversation.
          example: "1"
        inReplyTo:
          type: string
          description: "The identifier of the message this message is replying to,\
            \ if any."
          example: msg-12344
        created:
          type: string
          description: The timestamp when the message was created.
          format: date-time
        createdBy:
          $ref: "#/components/schemas/Participant"
        content:
          type: string
          description: The content of the message.
          example: "Hello, how can I help you?"
        readBy:
          type: array
          description: The list of participants who have read the message.
          items:
            $ref: "#/components/schemas/Participant"
        attachments:
          type: array
          description: The list of attachments associated with the message.
          items:
            $ref: "#/components/schemas/Attachment"
      description: "Represents a message within a conversation, including metadata\
        \ and content."
    PageMessage:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        pageable:
          $ref: "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
  securitySchemes: { }
